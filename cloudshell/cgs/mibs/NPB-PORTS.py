#
# PySNMP MIB module NPB-PORTS (http://snmplabs.com/pysmi)
# ASN.1 source file://./NPB-PORTS.mib
# Produced by pysmi-0.3.4 at Wed Sep 25 12:44:11 2019
# On host MacBook-Pro-anthony.local platform Darwin version 18.7.0 by user anthony
# Using Python version 2.7.10 (default, Feb 22 2019, 21:55:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
npb_2, = mibBuilder.importSymbols("NPB-NPB-2", "npb-2")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "Counter32")
TruthValue, DisplayString, RowStatus, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention", "DateAndTime")
portsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2))
portsMib.setRevisions(('2015-12-24 00:00',))
if mibBuilder.loadTexts: portsMib.setLastUpdated('201512240000Z')
if mibBuilder.loadTexts: portsMib.setOrganization('@ORGANIZATION')
class UnsignedShort(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class ConfdString(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1t'

class String(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1t'

class Capabilities(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(1000)
    namedValues = NamedValues(("max-num-of-ports", 1000))

class BreakablePhyPortNum(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1t'

class LogicalPortNum(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1t'

class BreakdownMaps(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(1000, 10000, 25000)
    namedValues = NamedValues(("break4x1", 1000), ("break4x10", 10000), ("break4x25", 25000))

class QsfpId(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 32)

class Transceiver(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7)
    namedValues = NamedValues(("unknown", 0), ("sfp", 1), ("sfp-plus", 2), ("qsfp", 3), ("qsfp-plus", 4), ("qsfp28", 5), ("dac", 6), ("sfp-copper", 7))

class LinkStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(-1, 0, 1, 2)
    namedValues = NamedValues(("unknown", -1), ("down", 0), ("up", 1), ("receiveDown", 2))

class FecStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(1, 2, 3)
    namedValues = NamedValues(("enable", 1), ("disable", 2), ("cl91", 3))

class SpeedLimit(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 100000)

class SfpMonitorStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(1, 2, 3)
    namedValues = NamedValues(("clear", 1), ("warning", 2), ("alarm", 3))

class PortSpeedConfig(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(1000, 10000, 25000, 40000, 100000)
    namedValues = NamedValues(("speed1G", 1000), ("speed10G", 10000), ("speed25G", 25000), ("speed40G", 40000), ("speed100G", 100000))

class PortRxTxModes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(0, 1, 2, 3, 4)
    namedValues = NamedValues(("loopback-external", 0), ("simplex", 1), ("normal", 2), ("loopback-internal", 3), ("loopback-MAC", 4))

class SfpPresentType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + SingleValueConstraint(0, 1)
    namedValues = NamedValues(("out", 0), ("in", 1))

ports = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1))
portsBreakout = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 1))
portStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2))
portStatisticsPacketSize = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1))
portStatisticsTrafficTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2))
portStatisticsErrors = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3))
portStatisticsUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4))
portStatisticsSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5))
portStatisticsClearAll = MibScalar((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portStatisticsClearAll.setStatus('current')
qsfp = MibIdentifier((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3))
portsBreakoutPortTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 1, 1), )
if mibBuilder.loadTexts: portsBreakoutPortTable.setStatus('current')
portsBreakoutPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 1, 1, 1), ).setIndexNames((1, "NPB-PORTS", "portsBreakoutPortPhysicalPortNumber"))
if mibBuilder.loadTexts: portsBreakoutPortEntry.setStatus('current')
portsBreakoutPortPhysicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 1, 1, 1, 1), BreakablePhyPortNum())
if mibBuilder.loadTexts: portsBreakoutPortPhysicalPortNumber.setStatus('current')
portsBreakoutPortEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsBreakoutPortEnabled.setStatus('current')
portsBreakoutPortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 1, 1, 1, 3), BreakdownMaps()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsBreakoutPortMap.setStatus('current')
portsBreakoutPortRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsBreakoutPortRowstatus.setStatus('current')
portsPortTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2), )
if mibBuilder.loadTexts: portsPortTable.setStatus('current')
portsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1), ).setIndexNames((1, "NPB-PORTS", "portsPortLogicalPortNumber"))
if mibBuilder.loadTexts: portsPortEntry.setStatus('current')
portsPortLogicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 1), LogicalPortNum())
if mibBuilder.loadTexts: portsPortLogicalPortNumber.setStatus('current')
portsPortStatusMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 2), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsPortStatusMtu.setStatus('current')
portsPortStatusLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 3), LinkStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsPortStatusLinkStatus.setStatus('current')
portsPortTxDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 4), String().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortTxDescription.setStatus('current')
portsPortRxDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 5), String().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortRxDescription.setStatus('current')
portsPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 6), PortSpeedConfig().clone('speed10G')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortSpeed.setStatus('current')
portsPortFec = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 7), FecStatus().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortFec.setStatus('current')
portsPortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 8), UnsignedShort().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortVlan.setStatus('current')
portsPortIngressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3)).clone(namedValues=NamedValues(("no-action", 0), ("add", 1), ("replace", 2), ("remove", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortIngressAction.setStatus('current')
portsPortEgressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 3)).clone(namedValues=NamedValues(("no-action", 0), ("remove", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortEgressAction.setStatus('current')
portsPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 11), PortRxTxModes().clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortMode.setStatus('current')
portsPortPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 12), String().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortPortName.setStatus('current')
portsPortAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2)).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortAdmin.setStatus('current')
portsPortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 14), String().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortDescription.setStatus('current')
portsPortUtilizationAlertsRxRaiseThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortUtilizationAlertsRxRaiseThreshold.setStatus('current')
portsPortUtilizationAlertsRxClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortUtilizationAlertsRxClearThreshold.setStatus('current')
portsPortUtilizationAlertsRxAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2)).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortUtilizationAlertsRxAdmin.setStatus('current')
portsPortUtilizationAlertsTxRaiseThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortUtilizationAlertsTxRaiseThreshold.setStatus('current')
portsPortUtilizationAlertsTxClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortUtilizationAlertsTxClearThreshold.setStatus('current')
portsPortUtilizationAlertsTxAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2)).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortUtilizationAlertsTxAdmin.setStatus('current')
portsPortRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 2, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsPortRowstatus.setStatus('current')
portsGroupTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3), )
if mibBuilder.loadTexts: portsGroupTable.setStatus('current')
portsGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3, 1), ).setIndexNames((1, "NPB-PORTS", "portsGroupName"))
if mibBuilder.loadTexts: portsGroupEntry.setStatus('current')
portsGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3, 1, 1), String().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: portsGroupName.setStatus('current')
portsGroupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3, 1, 2), String().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsGroupDescription.setStatus('current')
portsGroupPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3, 1, 3), String()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsGroupPorts.setStatus('current')
portsGroupUsedByLbgs = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3, 1, 4), String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsGroupUsedByLbgs.setStatus('current')
portsGroupUsedByFilters = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3, 1, 5), String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsGroupUsedByFilters.setStatus('current')
portsGroupRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsGroupRowstatus.setStatus('current')
portStatisticsPacketSizePortTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: portStatisticsPacketSizePortTable.setStatus('current')
portStatisticsPacketSizePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "NPB-PORTS", "portStatisticsPacketSizePortOrder"))
if mibBuilder.loadTexts: portStatisticsPacketSizePortEntry.setStatus('current')
portStatisticsPacketSizePortLogicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 1), LogicalPortNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortLogicalPortNumber.setStatus('current')
portStatisticsPacketSizePortOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: portStatisticsPacketSizePortOrder.setStatus('current')
portStatisticsPacketSizePortRxUndersized = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRxUndersized.setStatus('current')
portStatisticsPacketSizePortRx64 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx64.setStatus('current')
portStatisticsPacketSizePortTx64 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx64.setStatus('current')
portStatisticsPacketSizePortRx65127 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx65127.setStatus('current')
portStatisticsPacketSizePortTx65127 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx65127.setStatus('current')
portStatisticsPacketSizePortRx128255 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx128255.setStatus('current')
portStatisticsPacketSizePortTx128255 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx128255.setStatus('current')
portStatisticsPacketSizePortRx256511 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx256511.setStatus('current')
portStatisticsPacketSizePortTx256511 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx256511.setStatus('current')
portStatisticsPacketSizePortRx5121023 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx5121023.setStatus('current')
portStatisticsPacketSizePortTx5121023 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx5121023.setStatus('current')
portStatisticsPacketSizePortRxOversized = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRxOversized.setStatus('current')
portStatisticsPacketSizePortRx10241518 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx10241518.setStatus('current')
portStatisticsPacketSizePortTx10241518 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx10241518.setStatus('current')
portStatisticsPacketSizePortRx15192047 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx15192047.setStatus('current')
portStatisticsPacketSizePortTx15192047 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx15192047.setStatus('current')
portStatisticsPacketSizePortRx20484095 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx20484095.setStatus('current')
portStatisticsPacketSizePortTx20484095 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx20484095.setStatus('current')
portStatisticsPacketSizePortRx40969216 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx40969216.setStatus('current')
portStatisticsPacketSizePortTx40969216 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx40969216.setStatus('current')
portStatisticsPacketSizePortRx921716830 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortRx921716830.setStatus('current')
portStatisticsPacketSizePortTx921716830 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTx921716830.setStatus('current')
portStatisticsPacketSizePortTxOversized = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsPacketSizePortTxOversized.setStatus('current')
portStatisticsTrafficTypesPortTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1), )
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortTable.setStatus('current')
portStatisticsTrafficTypesPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1), ).setIndexNames((0, "NPB-PORTS", "portStatisticsTrafficTypesPortOrder"))
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortEntry.setStatus('current')
portStatisticsTrafficTypesPortLogicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 1), LogicalPortNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortLogicalPortNumber.setStatus('current')
portStatisticsTrafficTypesPortOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortOrder.setStatus('current')
portStatisticsTrafficTypesPortRxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortRxUnknown.setStatus('current')
portStatisticsTrafficTypesPortRxUcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortRxUcst.setStatus('current')
portStatisticsTrafficTypesPortTxUcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortTxUcst.setStatus('current')
portStatisticsTrafficTypesPortRxBcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortRxBcst.setStatus('current')
portStatisticsTrafficTypesPortTxBcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortTxBcst.setStatus('current')
portStatisticsTrafficTypesPortRxMcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortRxMcst.setStatus('current')
portStatisticsTrafficTypesPortTxMcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortTxMcst.setStatus('current')
portStatisticsTrafficTypesPortRxIpv6Mcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortRxIpv6Mcst.setStatus('current')
portStatisticsTrafficTypesPortTxIpv6Mcst = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsTrafficTypesPortTxIpv6Mcst.setStatus('current')
portStatisticsErrorsPortTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1), )
if mibBuilder.loadTexts: portStatisticsErrorsPortTable.setStatus('current')
portStatisticsErrorsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1), ).setIndexNames((0, "NPB-PORTS", "portStatisticsErrorsPortOrder"))
if mibBuilder.loadTexts: portStatisticsErrorsPortEntry.setStatus('current')
portStatisticsErrorsPortLogicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 1), LogicalPortNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortLogicalPortNumber.setStatus('current')
portStatisticsErrorsPortOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: portStatisticsErrorsPortOrder.setStatus('current')
portStatisticsErrorsPortRxErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxErrPkts.setStatus('current')
portStatisticsErrorsPortTxErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortTxErrPkts.setStatus('current')
portStatisticsErrorsPortRxIpErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxIpErrPkts.setStatus('current')
portStatisticsErrorsPortRxJabber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxJabber.setStatus('current')
portStatisticsErrorsPortRxDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxDropEvents.setStatus('current')
portStatisticsErrorsPortRxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxFragments.setStatus('current')
portStatisticsErrorsPortRxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxCollisions.setStatus('current')
portStatisticsErrorsPortRxDeferredCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxDeferredCollisions.setStatus('current')
portStatisticsErrorsPortRxLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxLateCollisions.setStatus('current')
portStatisticsErrorsPortRxExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxExcessiveCollisions.setStatus('current')
portStatisticsErrorsPortRxAlignErr = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxAlignErr.setStatus('current')
portStatisticsErrorsPortRxFcsErr = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxFcsErr.setStatus('current')
portStatisticsErrorsPortRxMacErr = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxMacErr.setStatus('current')
portStatisticsErrorsPortTxMacErr = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortTxMacErr.setStatus('current')
portStatisticsErrorsPortRxCarrierSenseErr = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxCarrierSenseErr.setStatus('current')
portStatisticsErrorsPortRxFrameTooLong = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxFrameTooLong.setStatus('current')
portStatisticsErrorsPortRxSymbolErr = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxSymbolErr.setStatus('current')
portStatisticsErrorsPortRxUnknownOpcode = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 3, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsErrorsPortRxUnknownOpcode.setStatus('current')
portStatisticsUtilizationPortTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1), )
if mibBuilder.loadTexts: portStatisticsUtilizationPortTable.setStatus('current')
portStatisticsUtilizationPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1), ).setIndexNames((0, "NPB-PORTS", "portStatisticsUtilizationPortOrder"))
if mibBuilder.loadTexts: portStatisticsUtilizationPortEntry.setStatus('current')
portStatisticsUtilizationPortLogicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 1), LogicalPortNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortLogicalPortNumber.setStatus('current')
portStatisticsUtilizationPortOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: portStatisticsUtilizationPortOrder.setStatus('current')
portStatisticsUtilizationPortRxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("ok", 0), ("alarm", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxStatus.setStatus('current')
portStatisticsUtilizationPortRxLastFailureTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 4), String().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxLastFailureTimestamp.setStatus('current')
portStatisticsUtilizationPortRxUtilPercentsAvg5min = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 5), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilPercentsAvg5min.setStatus('current')
portStatisticsUtilizationPortRxUtilBpsAvg5min = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 6), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilBpsAvg5min.setStatus('current')
portStatisticsUtilizationPortRxUtilPercentsCurrent1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 7), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilPercentsCurrent1sec.setStatus('current')
portStatisticsUtilizationPortRxUtilBpsCurrent1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 8), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilBpsCurrent1sec.setStatus('current')
portStatisticsUtilizationPortRxUtilPpsCurrent1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 9), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilPpsCurrent1sec.setStatus('current')
portStatisticsUtilizationPortRxUtilTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 10), String().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilTimestamp.setStatus('current')
portStatisticsUtilizationPortRxUtilPeakPercents = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 11), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilPeakPercents.setStatus('current')
portStatisticsUtilizationPortRxUtilPeakBps = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 12), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilPeakBps.setStatus('current')
portStatisticsUtilizationPortRxUtilPeakTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 13), String().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortRxUtilPeakTimestamp.setStatus('current')
portStatisticsUtilizationPortTxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2)).clone(namedValues=NamedValues(("ok", 0), ("alarm", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxStatus.setStatus('current')
portStatisticsUtilizationPortTxLastFailureTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 15), String().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxLastFailureTimestamp.setStatus('current')
portStatisticsUtilizationPortTxUtilPercentsAvg5min = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 16), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilPercentsAvg5min.setStatus('current')
portStatisticsUtilizationPortTxUtilBpsAvg5min = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 17), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilBpsAvg5min.setStatus('current')
portStatisticsUtilizationPortTxUtilPercentsCurrent1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 18), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilPercentsCurrent1sec.setStatus('current')
portStatisticsUtilizationPortTxUtilBpsCurrent1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 19), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilBpsCurrent1sec.setStatus('current')
portStatisticsUtilizationPortTxUtilPpsCurrent1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 20), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilPpsCurrent1sec.setStatus('current')
portStatisticsUtilizationPortTxUtilTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 21), String().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilTimestamp.setStatus('current')
portStatisticsUtilizationPortTxUtilPeakPercents = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 22), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilPeakPercents.setStatus('current')
portStatisticsUtilizationPortTxUtilPeakBps = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 23), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilPeakBps.setStatus('current')
portStatisticsUtilizationPortTxUtilPeakTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 4, 1, 1, 24), String().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsUtilizationPortTxUtilPeakTimestamp.setStatus('current')
portStatisticsSummaryPortTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1), )
if mibBuilder.loadTexts: portStatisticsSummaryPortTable.setStatus('current')
portStatisticsSummaryPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1), ).setIndexNames((0, "NPB-PORTS", "portStatisticsSummaryPortOrder"))
if mibBuilder.loadTexts: portStatisticsSummaryPortEntry.setStatus('current')
portStatisticsSummaryPortLogicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 1), LogicalPortNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsSummaryPortLogicalPortNumber.setStatus('current')
portStatisticsSummaryPortOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: portStatisticsSummaryPortOrder.setStatus('current')
portStatisticsSummaryPortRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsSummaryPortRxOctets.setStatus('current')
portStatisticsSummaryPortTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsSummaryPortTxOctets.setStatus('current')
portStatisticsSummaryPortRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsSummaryPortRxPackets.setStatus('current')
portStatisticsSummaryPortTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsSummaryPortTxPackets.setStatus('current')
portStatisticsSummaryPortRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsSummaryPortRxDiscards.setStatus('current')
portStatisticsSummaryPortTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 2, 5, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatisticsSummaryPortTxDiscards.setStatus('current')
qsfpQsfpTable = MibTable((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1), )
if mibBuilder.loadTexts: qsfpQsfpTable.setStatus('current')
qsfpQsfpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1), ).setIndexNames((0, "NPB-PORTS", "qsfpQsfpQsfpId"))
if mibBuilder.loadTexts: qsfpQsfpEntry.setStatus('current')
qsfpQsfpQsfpId = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 1), QsfpId())
if mibBuilder.loadTexts: qsfpQsfpQsfpId.setStatus('current')
qsfpQsfpSfpPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 2), SfpPresentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpPresent.setStatus('current')
qsfpQsfpSfpTrxId = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 3), String().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrxId.setStatus('current')
qsfpQsfpSfpTransceiver = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 4), Transceiver()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTransceiver.setStatus('current')
qsfpQsfpEncodingValues = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 5), String().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpEncodingValues.setStatus('current')
qsfpQsfpConnectorTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 6), String().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpConnectorTypes.setStatus('current')
qsfpQsfpSfpLength50um = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 7), UnsignedShort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpLength50um.setStatus('current')
qsfpQsfpSfpLength625um = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 8), UnsignedShort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpLength625um.setStatus('current')
qsfpQsfpSfpLengthOM3 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 9), UnsignedShort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpLengthOM3.setStatus('current')
qsfpQsfpSfpVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 10), String().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpVendorName.setStatus('current')
qsfpQsfpSfpVendorOui = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 11), String().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpVendorOui.setStatus('current')
qsfpQsfpSfpVendorPN = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 12), String().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpVendorPN.setStatus('current')
qsfpQsfpSfpPartRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 13), String().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpPartRevision.setStatus('current')
qsfpQsfpSfpVendorSN = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 14), String().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpVendorSN.setStatus('current')
qsfpQsfpSfpDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 15), String().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpDateCode.setStatus('current')
qsfpQsfpSfpSFF8472Rev = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 16), String().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpSFF8472Rev.setStatus('current')
qsfpQsfpQsfpTemperatureFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 17), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTemperatureFlags.setStatus('current')
qsfpQsfpQsfpVccFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 18), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpVccFlags.setStatus('current')
qsfpQsfpQsfpRxPowerFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 19), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpRxPowerFlags.setStatus('current')
qsfpQsfpQsfpRxPowerFlags2 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 20), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpRxPowerFlags2.setStatus('current')
qsfpQsfpQsfpRxPowerFlags3 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 21), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpRxPowerFlags3.setStatus('current')
qsfpQsfpQsfpRxPowerFlags4 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 22), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpRxPowerFlags4.setStatus('current')
qsfpQsfpQsfpTxBiasFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 23), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxBiasFlags.setStatus('current')
qsfpQsfpQsfpTxBiasFlags2 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 24), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxBiasFlags2.setStatus('current')
qsfpQsfpQsfpTxBiasFlags3 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 25), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxBiasFlags3.setStatus('current')
qsfpQsfpQsfpTxBiasFlags4 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 26), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxBiasFlags4.setStatus('current')
qsfpQsfpQsfpTxPowerFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 27), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxPowerFlags.setStatus('current')
qsfpQsfpQsfpTxPowerFlags2 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 28), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxPowerFlags2.setStatus('current')
qsfpQsfpQsfpTxPowerFlags3 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 29), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxPowerFlags3.setStatus('current')
qsfpQsfpQsfpTxPowerFlags4 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 30), SfpMonitorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpQsfpTxPowerFlags4.setStatus('current')
qsfpQsfpSfpDiagMonitorType = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 31), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpDiagMonitorType.setStatus('current')
qsfpQsfpSfpRtTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 32), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTemperature.setStatus('current')
qsfpQsfpSfpRtVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 33), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtVcc.setStatus('current')
qsfpQsfpSfpRtTxBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 34), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxBiasCurrent.setStatus('current')
qsfpQsfpSfpRtTxBiasCurrent2 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 35), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxBiasCurrent2.setStatus('current')
qsfpQsfpSfpRtTxBiasCurrent3 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 36), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxBiasCurrent3.setStatus('current')
qsfpQsfpSfpRtTxBiasCurrent4 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 37), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxBiasCurrent4.setStatus('current')
qsfpQsfpSfpRtRxInputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 38), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtRxInputPower.setStatus('current')
qsfpQsfpSfpRtRxInputPower2 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 39), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtRxInputPower2.setStatus('current')
qsfpQsfpSfpRtRxInputPower3 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 40), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtRxInputPower3.setStatus('current')
qsfpQsfpSfpRtRxInputPower4 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 41), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtRxInputPower4.setStatus('current')
qsfpQsfpSfpRtTxInputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 42), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxInputPower.setStatus('current')
qsfpQsfpSfpRtTxInputPower2 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 43), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxInputPower2.setStatus('current')
qsfpQsfpSfpRtTxInputPower3 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 44), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxInputPower3.setStatus('current')
qsfpQsfpSfpRtTxInputPower4 = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 45), ConfdString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpRtTxInputPower4.setStatus('current')
qsfpQsfpSfpTrx10GEnetCompliance = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 46), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrx10GEnetCompliance.setStatus('current')
qsfpQsfpSfpTrxEnetCompliance = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 47), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrxEnetCompliance.setStatus('current')
qsfpQsfpSfpTrxFibreLinkLength = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 48), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrxFibreLinkLength.setStatus('current')
qsfpQsfpSfpTrxFibreTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 49), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrxFibreTechnology.setStatus('current')
qsfpQsfpSfpTrxSfpCableTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 50), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrxSfpCableTechnology.setStatus('current')
qsfpQsfpSfpTrxFibreTxMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 51), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrxFibreTxMedia.setStatus('current')
qsfpQsfpSfpTrxFibreSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 47477, 100, 2, 2, 3, 1, 1, 52), String().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsfpQsfpSfpTrxFibreSpeed.setStatus('current')
mibBuilder.exportSymbols("NPB-PORTS", portStatisticsPacketSizePortTx256511=portStatisticsPacketSizePortTx256511, SfpPresentType=SfpPresentType, qsfpQsfpSfpRtTxBiasCurrent=qsfpQsfpSfpRtTxBiasCurrent, portStatisticsSummaryPortEntry=portStatisticsSummaryPortEntry, qsfpQsfpQsfpTxBiasFlags=qsfpQsfpQsfpTxBiasFlags, portStatisticsErrorsPortRxExcessiveCollisions=portStatisticsErrorsPortRxExcessiveCollisions, portStatisticsPacketSizePortTx40969216=portStatisticsPacketSizePortTx40969216, qsfpQsfpSfpVendorName=qsfpQsfpSfpVendorName, portStatisticsUtilizationPortTxUtilPeakPercents=portStatisticsUtilizationPortTxUtilPeakPercents, portStatisticsUtilizationPortRxUtilBpsCurrent1sec=portStatisticsUtilizationPortRxUtilBpsCurrent1sec, qsfpQsfpSfpRtTxInputPower3=qsfpQsfpSfpRtTxInputPower3, portStatisticsPacketSizePortRx64=portStatisticsPacketSizePortRx64, portStatisticsPacketSizePortTx64=portStatisticsPacketSizePortTx64, portsPortIngressAction=portsPortIngressAction, portsPortLogicalPortNumber=portsPortLogicalPortNumber, portStatisticsUtilizationPortRxUtilPercentsCurrent1sec=portStatisticsUtilizationPortRxUtilPercentsCurrent1sec, portStatisticsPacketSizePortTx20484095=portStatisticsPacketSizePortTx20484095, portStatisticsClearAll=portStatisticsClearAll, portsPortRxDescription=portsPortRxDescription, portStatisticsPacketSizePortLogicalPortNumber=portStatisticsPacketSizePortLogicalPortNumber, portStatisticsTrafficTypesPortLogicalPortNumber=portStatisticsTrafficTypesPortLogicalPortNumber, portStatisticsErrorsPortRxAlignErr=portStatisticsErrorsPortRxAlignErr, portStatisticsTrafficTypesPortTable=portStatisticsTrafficTypesPortTable, qsfpQsfpSfpTransceiver=qsfpQsfpSfpTransceiver, portsMib=portsMib, qsfpQsfpSfpPresent=qsfpQsfpSfpPresent, portsGroupTable=portsGroupTable, portStatisticsSummaryPortTxPackets=portStatisticsSummaryPortTxPackets, qsfpQsfpEncodingValues=qsfpQsfpEncodingValues, qsfpQsfpSfpLength625um=qsfpQsfpSfpLength625um, portStatisticsPacketSizePortRx10241518=portStatisticsPacketSizePortRx10241518, qsfpQsfpQsfpTxBiasFlags4=qsfpQsfpQsfpTxBiasFlags4, portsPortEgressAction=portsPortEgressAction, portStatisticsSummaryPortLogicalPortNumber=portStatisticsSummaryPortLogicalPortNumber, qsfpQsfpSfpTrxFibreTechnology=qsfpQsfpSfpTrxFibreTechnology, qsfpQsfpSfpVendorPN=qsfpQsfpSfpVendorPN, portStatisticsTrafficTypesPortRxBcst=portStatisticsTrafficTypesPortRxBcst, ConfdString=ConfdString, qsfpQsfpSfpRtVcc=qsfpQsfpSfpRtVcc, portStatisticsTrafficTypes=portStatisticsTrafficTypes, portStatisticsTrafficTypesPortRxUnknown=portStatisticsTrafficTypesPortRxUnknown, portStatisticsPacketSizePortTxOversized=portStatisticsPacketSizePortTxOversized, portStatisticsUtilizationPortRxUtilPercentsAvg5min=portStatisticsUtilizationPortRxUtilPercentsAvg5min, portStatisticsErrorsPortEntry=portStatisticsErrorsPortEntry, portStatisticsPacketSizePortRx128255=portStatisticsPacketSizePortRx128255, qsfpQsfpSfpDiagMonitorType=qsfpQsfpSfpDiagMonitorType, portStatisticsPacketSizePortTx15192047=portStatisticsPacketSizePortTx15192047, portsPortSpeed=portsPortSpeed, portsGroupUsedByLbgs=portsGroupUsedByLbgs, portStatisticsErrorsPortRxErrPkts=portStatisticsErrorsPortRxErrPkts, portsPortUtilizationAlertsTxAdmin=portsPortUtilizationAlertsTxAdmin, FecStatus=FecStatus, portStatisticsUtilizationPortTxUtilPeakBps=portStatisticsUtilizationPortTxUtilPeakBps, portStatisticsErrorsPortRxUnknownOpcode=portStatisticsErrorsPortRxUnknownOpcode, portStatisticsErrorsPortOrder=portStatisticsErrorsPortOrder, portStatisticsUtilizationPortRxUtilTimestamp=portStatisticsUtilizationPortRxUtilTimestamp, qsfpQsfpQsfpRxPowerFlags=qsfpQsfpQsfpRxPowerFlags, portsGroupPorts=portsGroupPorts, portsPortUtilizationAlertsTxRaiseThreshold=portsPortUtilizationAlertsTxRaiseThreshold, portsPortVlan=portsPortVlan, portStatisticsPacketSizePortRxUndersized=portStatisticsPacketSizePortRxUndersized, portStatisticsUtilizationPortEntry=portStatisticsUtilizationPortEntry, portsPortMode=portsPortMode, portStatisticsErrorsPortRxFragments=portStatisticsErrorsPortRxFragments, portStatisticsErrorsPortRxLateCollisions=portStatisticsErrorsPortRxLateCollisions, qsfpQsfpQsfpTxPowerFlags3=qsfpQsfpQsfpTxPowerFlags3, PYSNMP_MODULE_ID=portsMib, PortSpeedConfig=PortSpeedConfig, portStatisticsUtilizationPortTable=portStatisticsUtilizationPortTable, portStatisticsTrafficTypesPortRxUcst=portStatisticsTrafficTypesPortRxUcst, qsfpQsfpQsfpRxPowerFlags2=qsfpQsfpQsfpRxPowerFlags2, qsfpQsfpSfpTrxFibreSpeed=qsfpQsfpSfpTrxFibreSpeed, portStatisticsUtilizationPortRxUtilPeakBps=portStatisticsUtilizationPortRxUtilPeakBps, portsPortStatusLinkStatus=portsPortStatusLinkStatus, qsfpQsfpQsfpTemperatureFlags=qsfpQsfpQsfpTemperatureFlags, portStatisticsUtilizationPortRxUtilPeakTimestamp=portStatisticsUtilizationPortRxUtilPeakTimestamp, portStatisticsSummary=portStatisticsSummary, portsPortRowstatus=portsPortRowstatus, portStatisticsErrorsPortRxFcsErr=portStatisticsErrorsPortRxFcsErr, portStatisticsPacketSizePortRxOversized=portStatisticsPacketSizePortRxOversized, portStatisticsUtilizationPortRxStatus=portStatisticsUtilizationPortRxStatus, portStatisticsPacketSizePortTx10241518=portStatisticsPacketSizePortTx10241518, portsGroupRowstatus=portsGroupRowstatus, BreakdownMaps=BreakdownMaps, qsfpQsfpQsfpId=qsfpQsfpQsfpId, portsGroupName=portsGroupName, SfpMonitorStatus=SfpMonitorStatus, portStatisticsUtilization=portStatisticsUtilization, qsfpQsfpSfpRtTxInputPower=qsfpQsfpSfpRtTxInputPower, portStatisticsSummaryPortTable=portStatisticsSummaryPortTable, qsfpQsfpSfpTrx10GEnetCompliance=qsfpQsfpSfpTrx10GEnetCompliance, qsfpQsfpQsfpTxPowerFlags2=qsfpQsfpQsfpTxPowerFlags2, portStatisticsSummaryPortTxOctets=portStatisticsSummaryPortTxOctets, portStatisticsErrorsPortRxDropEvents=portStatisticsErrorsPortRxDropEvents, portsBreakoutPortEntry=portsBreakoutPortEntry, portsGroupDescription=portsGroupDescription, portsPortUtilizationAlertsRxAdmin=portsPortUtilizationAlertsRxAdmin, qsfpQsfpSfpTrxFibreTxMedia=qsfpQsfpSfpTrxFibreTxMedia, qsfpQsfpSfpRtTxInputPower2=qsfpQsfpSfpRtTxInputPower2, qsfpQsfpSfpRtRxInputPower3=qsfpQsfpSfpRtRxInputPower3, portsBreakoutPortTable=portsBreakoutPortTable, portStatisticsUtilizationPortTxUtilPeakTimestamp=portStatisticsUtilizationPortTxUtilPeakTimestamp, portsPortFec=portsPortFec, portStatisticsPacketSizePortTable=portStatisticsPacketSizePortTable, portStatisticsPacketSizePortTx128255=portStatisticsPacketSizePortTx128255, portStatisticsUtilizationPortTxUtilBpsAvg5min=portStatisticsUtilizationPortTxUtilBpsAvg5min, portStatisticsPacketSizePortRx20484095=portStatisticsPacketSizePortRx20484095, portStatisticsTrafficTypesPortOrder=portStatisticsTrafficTypesPortOrder, qsfpQsfpSfpTrxSfpCableTechnology=qsfpQsfpSfpTrxSfpCableTechnology, portsPortAdmin=portsPortAdmin, portStatisticsErrors=portStatisticsErrors, LogicalPortNum=LogicalPortNum, qsfpQsfpQsfpTxPowerFlags=qsfpQsfpQsfpTxPowerFlags, portStatisticsErrorsPortRxJabber=portStatisticsErrorsPortRxJabber, portStatisticsUtilizationPortLogicalPortNumber=portStatisticsUtilizationPortLogicalPortNumber, portStatisticsUtilizationPortRxUtilBpsAvg5min=portStatisticsUtilizationPortRxUtilBpsAvg5min, qsfpQsfpSfpTrxEnetCompliance=qsfpQsfpSfpTrxEnetCompliance, portsPortUtilizationAlertsRxRaiseThreshold=portsPortUtilizationAlertsRxRaiseThreshold, portsBreakoutPortMap=portsBreakoutPortMap, portStatisticsErrorsPortRxMacErr=portStatisticsErrorsPortRxMacErr, QsfpId=QsfpId, PortRxTxModes=PortRxTxModes, portsGroupEntry=portsGroupEntry, portStatisticsPacketSizePortTx921716830=portStatisticsPacketSizePortTx921716830, portStatisticsPacketSizePortRx40969216=portStatisticsPacketSizePortRx40969216, portStatisticsErrorsPortRxCollisions=portStatisticsErrorsPortRxCollisions, portStatisticsSummaryPortRxDiscards=portStatisticsSummaryPortRxDiscards, qsfpQsfpQsfpRxPowerFlags4=qsfpQsfpQsfpRxPowerFlags4, portStatisticsTrafficTypesPortTxMcst=portStatisticsTrafficTypesPortTxMcst, portStatisticsErrorsPortRxCarrierSenseErr=portStatisticsErrorsPortRxCarrierSenseErr, portsPortUtilizationAlertsRxClearThreshold=portsPortUtilizationAlertsRxClearThreshold, portStatisticsTrafficTypesPortTxIpv6Mcst=portStatisticsTrafficTypesPortTxIpv6Mcst, portStatisticsPacketSizePortRx65127=portStatisticsPacketSizePortRx65127, portStatisticsPacketSizePortTx65127=portStatisticsPacketSizePortTx65127, portStatisticsUtilizationPortTxStatus=portStatisticsUtilizationPortTxStatus, portStatisticsUtilizationPortTxUtilBpsCurrent1sec=portStatisticsUtilizationPortTxUtilBpsCurrent1sec, portStatisticsErrorsPortTxErrPkts=portStatisticsErrorsPortTxErrPkts, portStatisticsUtilizationPortTxUtilPpsCurrent1sec=portStatisticsUtilizationPortTxUtilPpsCurrent1sec, BreakablePhyPortNum=BreakablePhyPortNum, portsPortTable=portsPortTable, Transceiver=Transceiver, portStatisticsUtilizationPortTxUtilTimestamp=portStatisticsUtilizationPortTxUtilTimestamp, qsfpQsfpSfpRtTxInputPower4=qsfpQsfpSfpRtTxInputPower4, qsfpQsfpSfpRtTxBiasCurrent2=qsfpQsfpSfpRtTxBiasCurrent2, qsfpQsfpConnectorTypes=qsfpQsfpConnectorTypes, portsPortUtilizationAlertsTxClearThreshold=portsPortUtilizationAlertsTxClearThreshold, Capabilities=Capabilities, LinkStatusType=LinkStatusType, portStatisticsPacketSize=portStatisticsPacketSize, portsGroupUsedByFilters=portsGroupUsedByFilters, portsBreakout=portsBreakout, portStatisticsTrafficTypesPortTxUcst=portStatisticsTrafficTypesPortTxUcst, qsfpQsfpQsfpTxBiasFlags3=qsfpQsfpQsfpTxBiasFlags3, portStatisticsErrorsPortTable=portStatisticsErrorsPortTable, qsfpQsfpQsfpTxBiasFlags2=qsfpQsfpQsfpTxBiasFlags2, qsfpQsfpQsfpTxPowerFlags4=qsfpQsfpQsfpTxPowerFlags4, portsPortDescription=portsPortDescription, portStatisticsPacketSizePortEntry=portStatisticsPacketSizePortEntry, portStatisticsSummaryPortRxPackets=portStatisticsSummaryPortRxPackets, qsfpQsfpSfpRtRxInputPower2=qsfpQsfpSfpRtRxInputPower2, portStatisticsUtilizationPortOrder=portStatisticsUtilizationPortOrder, portStatisticsPacketSizePortRx921716830=portStatisticsPacketSizePortRx921716830, portStatisticsSummaryPortOrder=portStatisticsSummaryPortOrder, qsfpQsfpQsfpVccFlags=qsfpQsfpQsfpVccFlags, qsfpQsfpEntry=qsfpQsfpEntry, ports=ports, qsfpQsfpSfpTrxFibreLinkLength=qsfpQsfpSfpTrxFibreLinkLength, UnsignedShort=UnsignedShort, portStatisticsUtilizationPortTxLastFailureTimestamp=portStatisticsUtilizationPortTxLastFailureTimestamp, portStatisticsErrorsPortRxFrameTooLong=portStatisticsErrorsPortRxFrameTooLong, portStatisticsTrafficTypesPortTxBcst=portStatisticsTrafficTypesPortTxBcst, qsfpQsfpSfpTrxId=qsfpQsfpSfpTrxId, qsfpQsfpSfpLength50um=qsfpQsfpSfpLength50um, portsPortTxDescription=portsPortTxDescription, qsfpQsfpSfpRtTxBiasCurrent4=qsfpQsfpSfpRtTxBiasCurrent4, qsfpQsfpSfpVendorOui=qsfpQsfpSfpVendorOui, portStatisticsUtilizationPortRxUtilPpsCurrent1sec=portStatisticsUtilizationPortRxUtilPpsCurrent1sec, portStatisticsTrafficTypesPortRxMcst=portStatisticsTrafficTypesPortRxMcst, portStatisticsErrorsPortTxMacErr=portStatisticsErrorsPortTxMacErr, portsPortStatusMtu=portsPortStatusMtu, portStatisticsPacketSizePortOrder=portStatisticsPacketSizePortOrder, portsBreakoutPortEnabled=portsBreakoutPortEnabled, qsfpQsfpSfpRtRxInputPower=qsfpQsfpSfpRtRxInputPower, qsfpQsfpSfpLengthOM3=qsfpQsfpSfpLengthOM3, portsBreakoutPortRowstatus=portsBreakoutPortRowstatus, portStatisticsErrorsPortRxSymbolErr=portStatisticsErrorsPortRxSymbolErr, SpeedLimit=SpeedLimit, portsPortEntry=portsPortEntry, qsfpQsfpSfpRtTxBiasCurrent3=qsfpQsfpSfpRtTxBiasCurrent3, qsfpQsfpTable=qsfpQsfpTable, portStatisticsUtilizationPortRxUtilPeakPercents=portStatisticsUtilizationPortRxUtilPeakPercents, portStatisticsUtilizationPortRxLastFailureTimestamp=portStatisticsUtilizationPortRxLastFailureTimestamp, portStatisticsErrorsPortLogicalPortNumber=portStatisticsErrorsPortLogicalPortNumber, qsfpQsfpSfpRtTemperature=qsfpQsfpSfpRtTemperature, portStatisticsSummaryPortTxDiscards=portStatisticsSummaryPortTxDiscards, qsfpQsfpSfpVendorSN=qsfpQsfpSfpVendorSN, portStatisticsPacketSizePortTx5121023=portStatisticsPacketSizePortTx5121023, qsfpQsfpSfpRtRxInputPower4=qsfpQsfpSfpRtRxInputPower4, qsfpQsfpSfpPartRevision=qsfpQsfpSfpPartRevision, qsfpQsfpQsfpRxPowerFlags3=qsfpQsfpQsfpRxPowerFlags3, portStatisticsPacketSizePortRx5121023=portStatisticsPacketSizePortRx5121023, portStatisticsSummaryPortRxOctets=portStatisticsSummaryPortRxOctets, portsBreakoutPortPhysicalPortNumber=portsBreakoutPortPhysicalPortNumber, portStatisticsPacketSizePortRx256511=portStatisticsPacketSizePortRx256511, qsfp=qsfp, portStatisticsErrorsPortRxIpErrPkts=portStatisticsErrorsPortRxIpErrPkts, portStatisticsUtilizationPortTxUtilPercentsAvg5min=portStatisticsUtilizationPortTxUtilPercentsAvg5min, portStatisticsErrorsPortRxDeferredCollisions=portStatisticsErrorsPortRxDeferredCollisions, portStatisticsPacketSizePortRx15192047=portStatisticsPacketSizePortRx15192047, qsfpQsfpSfpDateCode=qsfpQsfpSfpDateCode, String=String, portStatisticsUtilizationPortTxUtilPercentsCurrent1sec=portStatisticsUtilizationPortTxUtilPercentsCurrent1sec, portStatistics=portStatistics, portStatisticsTrafficTypesPortRxIpv6Mcst=portStatisticsTrafficTypesPortRxIpv6Mcst, portsPortPortName=portsPortPortName, portStatisticsTrafficTypesPortEntry=portStatisticsTrafficTypesPortEntry, qsfpQsfpSfpSFF8472Rev=qsfpQsfpSfpSFF8472Rev)
